# Generated by Django 5.2.4 on 2025-09-10 22:15

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllowedEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='KPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('kpi_type', models.CharField(choices=[('score', 'Puntuación (0-10)'), ('percentage', 'Porcentaje (0-100%)'), ('amount', 'Monto (pesos)'), ('hours', 'Horas'), ('count', 'Cantidad')], default='score', max_length=20)),
                ('min_value', models.FloatField(default=0.0, help_text='Valor mínimo permitido')),
                ('max_value', models.FloatField(default=10.0, help_text='Valor máximo permitido')),
                ('unit', models.CharField(blank=True, help_text='Unidad de medida (ej: %, $, horas)', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('cedula', models.CharField(help_text='Documento de identidad', max_length=12, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator(message='La cédula debe tener entre 5 y 12 dígitos numéricos.', regex='^\\d{5,12}$')])),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('role', models.CharField(choices=[('lider', 'Líder'), ('administrativo', 'Administrativo')], default='administrativo', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Negotiator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('cedula', models.CharField(max_length=12, unique=True)),
                ('leader', models.ForeignKey(limit_choices_to={'role': 'lider'}, on_delete=django.db.models.deletion.CASCADE, related_name='negotiators', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('overall_score', models.FloatField(default=0.0)),
                ('feedback', models.TextField(blank=True)),
                ('evaluator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations_made', to=settings.AUTH_USER_MODEL)),
                ('negotiator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='accounts.negotiator')),
            ],
        ),
        migrations.CreateModel(
            name='SerEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('actitud', models.PositiveSmallIntegerField()),
                ('trabajo_en_equipo', models.PositiveSmallIntegerField()),
                ('sentido_pertenencia', models.PositiveSmallIntegerField()),
                ('relacionamiento', models.PositiveSmallIntegerField()),
                ('compromiso', models.PositiveSmallIntegerField()),
                ('evaluator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('negotiator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ser_evaluations', to='accounts.negotiator')),
            ],
        ),
        migrations.CreateModel(
            name='EvaluationKPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(default=0.0)),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kpis', to='accounts.evaluation')),
                ('kpi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.kpi')),
            ],
            options={
                'unique_together': {('evaluation', 'kpi')},
            },
        ),
        migrations.CreateModel(
            name='NegotiatorIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('conversion_de_ventas', models.FloatField(default=0.0, help_text='Conversión de ventas (%)')),
                ('recaudacion_mensual', models.FloatField(default=0.0, help_text='Recaudación mensual ($)')),
                ('tiempo_hablando', models.FloatField(default=0.0, help_text='Tiempo hablando (horas)')),
                ('porcentajes_cumplimiento_recaudo', models.FloatField(default=0.0, help_text='Porcentaje de cumplimiento de recaudo (%)')),
                ('porcentaje_cumplimiento_conversion', models.FloatField(default=0.0, help_text='Porcentaje de cumplimiento de conversión (%)')),
                ('porcentaje_caidas_acuerdos', models.FloatField(default=0.0, help_text='Porcentaje de caídas de acuerdos (%)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('negotiator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicators', to='accounts.negotiator')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('negotiator', 'date')},
            },
        ),
    ]
